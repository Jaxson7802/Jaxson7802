{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOzP5KRILHuuRpmMNvHiY1P",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Jaxson7802/Jaxson7802/blob/main/NDX_PREDICTION\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E9XNk7skB-Gu"
      },
      "source": [
        "#Description - this program uses aamd artificial recurrent neural network cazlled Long Short Tertm Memory (LSTM)\n",
        "# To predict the closing stock price of a corproation (Apple in this instance) using the past 60-day stopck price"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qwnCT2GNCqHg"
      },
      "source": [
        "#Import Libraries\n",
        "import math\n",
        "import pandas_datareader as web\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, LSTM\n",
        "import matplotlib.pyplot as plt\n",
        "plt.style.use('fivethirtyeight')\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "PWB4udcyDzpl",
        "outputId": "33a3a980-492b-4fdc-d5fe-dde6cd55c9db"
      },
      "source": [
        "#get the stock quote\n",
        "df = web.DataReader('NDX', data_source='yahoo', start = '2012-01-01', end = '2021-05-03')\n",
        "#Show the Data\n",
        "df\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Open</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Adj Close</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2012-01-03</th>\n",
              "      <td>2332.239990</td>\n",
              "      <td>2315.280029</td>\n",
              "      <td>2323.159912</td>\n",
              "      <td>2321.959961</td>\n",
              "      <td>1636850000</td>\n",
              "      <td>2321.959961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-01-04</th>\n",
              "      <td>2333.290039</td>\n",
              "      <td>2307.560059</td>\n",
              "      <td>2316.530029</td>\n",
              "      <td>2329.709961</td>\n",
              "      <td>1670530000</td>\n",
              "      <td>2329.709961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-01-05</th>\n",
              "      <td>2351.449951</td>\n",
              "      <td>2317.520020</td>\n",
              "      <td>2326.580078</td>\n",
              "      <td>2348.979980</td>\n",
              "      <td>1836410000</td>\n",
              "      <td>2348.979980</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-01-06</th>\n",
              "      <td>2362.580078</td>\n",
              "      <td>2341.639893</td>\n",
              "      <td>2350.679932</td>\n",
              "      <td>2356.169922</td>\n",
              "      <td>1683090000</td>\n",
              "      <td>2356.169922</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-01-09</th>\n",
              "      <td>2363.479980</td>\n",
              "      <td>2342.340088</td>\n",
              "      <td>2362.530029</td>\n",
              "      <td>2350.649902</td>\n",
              "      <td>1768080000</td>\n",
              "      <td>2350.649902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-27</th>\n",
              "      <td>14048.339844</td>\n",
              "      <td>13931.179688</td>\n",
              "      <td>14048.129883</td>\n",
              "      <td>13960.280273</td>\n",
              "      <td>4665430000</td>\n",
              "      <td>13960.280273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-28</th>\n",
              "      <td>13992.080078</td>\n",
              "      <td>13895.150391</td>\n",
              "      <td>13953.610352</td>\n",
              "      <td>13901.620117</td>\n",
              "      <td>4532050000</td>\n",
              "      <td>13901.620117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-29</th>\n",
              "      <td>14073.480469</td>\n",
              "      <td>13836.099609</td>\n",
              "      <td>14063.940430</td>\n",
              "      <td>13970.200195</td>\n",
              "      <td>4854340000</td>\n",
              "      <td>13970.200195</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-30</th>\n",
              "      <td>13969.209961</td>\n",
              "      <td>13838.820312</td>\n",
              "      <td>13857.790039</td>\n",
              "      <td>13860.759766</td>\n",
              "      <td>4762770000</td>\n",
              "      <td>13860.759766</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-05-03</th>\n",
              "      <td>13955.000000</td>\n",
              "      <td>13784.660156</td>\n",
              "      <td>13923.040039</td>\n",
              "      <td>13799.719727</td>\n",
              "      <td>4718850000</td>\n",
              "      <td>13799.719727</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2348 rows Ã— 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                    High           Low  ...      Volume     Adj Close\n",
              "Date                                    ...                          \n",
              "2012-01-03   2332.239990   2315.280029  ...  1636850000   2321.959961\n",
              "2012-01-04   2333.290039   2307.560059  ...  1670530000   2329.709961\n",
              "2012-01-05   2351.449951   2317.520020  ...  1836410000   2348.979980\n",
              "2012-01-06   2362.580078   2341.639893  ...  1683090000   2356.169922\n",
              "2012-01-09   2363.479980   2342.340088  ...  1768080000   2350.649902\n",
              "...                  ...           ...  ...         ...           ...\n",
              "2021-04-27  14048.339844  13931.179688  ...  4665430000  13960.280273\n",
              "2021-04-28  13992.080078  13895.150391  ...  4532050000  13901.620117\n",
              "2021-04-29  14073.480469  13836.099609  ...  4854340000  13970.200195\n",
              "2021-04-30  13969.209961  13838.820312  ...  4762770000  13860.759766\n",
              "2021-05-03  13955.000000  13784.660156  ...  4718850000  13799.719727\n",
              "\n",
              "[2348 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LKuJqvHEE3fX",
        "outputId": "7ed6769d-ed63-4fba-b86f-febfc9d3c8ab"
      },
      "source": [
        "#gET THE NUMBER OF ROWS AND COLUNS IN THE DATA SET\n",
        "df.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2345, 6)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 558
        },
        "id": "EOSagoXaFRYY",
        "outputId": "f8ce2745-30a3-4fd4-9e87-010bf11430d8"
      },
      "source": [
        "#visualize closing price\n",
        "plt.figure(figsize=(16,8))\n",
        "plt.title('Close Price Hitory')\n",
        "plt.plot(df[\"Close\"])\n",
        "plt.xlabel('Date', fontsize = 18)\n",
        "plt.ylabel ('Close Price USD ($)', fontsize = 18)\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iDftDk-GGdhM",
        "outputId": "ba891c5f-58a8-439f-bea3-0eead4c0579c"
      },
      "source": [
        "#create a new data frame with only the close column\n",
        "data = df.filter(['Close'])\n",
        "#Convert Dataframe to a numpy array\n",
        "dataset = data.values\n",
        "#Get number of rows to train the model on\n",
        "training_data_len = math.ceil(len(dataset)* .8)\n",
        "training_data_len"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1876"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UhhiNJ2fHdnd",
        "outputId": "72ec4829-7a9b-47b0-cf07-3c7bf1f76121"
      },
      "source": [
        "#Scale the data to j\n",
        "scaler = MinMaxScaler(feature_range=(0,1))\n",
        "scaled_data = scaler.fit_transform(dataset)\n",
        "scaled_data"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.00000000e+00],\n",
              "       [6.61265609e-04],\n",
              "       [2.30547221e-03],\n",
              "       ...,\n",
              "       [9.98656138e-01],\n",
              "       [9.93034963e-01],\n",
              "       [9.88029809e-01]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7-NYLwAsH9TY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2879d4a1-63d1-48e5-ecdb-5a997f4681af"
      },
      "source": [
        "#Create Training Dataset\n",
        "#Create the scaled training dataset\n",
        "train_data = scaled_data[0:training_data_len,:]\n",
        "#split data into x_Train and Y_Train data sets  \n",
        "x_train = []\n",
        "y_train = []\n",
        "\n",
        "for i in range (60, len(train_data)):\n",
        "  x_train.append(train_data[i-60:i, 0])\n",
        "  y_train.append(train_data[i, 0])\n",
        "  if i <=61:\n",
        "    print (x_train)\n",
        "    print(y_train)\n",
        "    print()\n",
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[array([0.        , 0.00066127, 0.00230547, 0.00291895, 0.00244796,\n",
            "       0.00387544, 0.00429098, 0.00512204, 0.00426794, 0.00608194,\n",
            "       0.00887376, 0.01021677, 0.00981745, 0.00983451, 0.00955635,\n",
            "       0.01226114, 0.01132001, 0.01192924, 0.01223214, 0.01245654,\n",
            "       0.01418265, 0.0148354 , 0.01768011, 0.01760588, 0.01792671,\n",
            "       0.01909223, 0.02064599, 0.01922876, 0.0211204 , 0.02161102,\n",
            "       0.01997023, 0.0230658 , 0.02237894, 0.02289088, 0.02199839,\n",
            "       0.02329105, 0.02408287, 0.02430045, 0.02657861, 0.02569466,\n",
            "       0.02743869, 0.02727146, 0.02499669, 0.02278081, 0.02439346,\n",
            "       0.02689602, 0.02772112, 0.02772112, 0.03203682, 0.03297369,\n",
            "       0.03351807, 0.03334656, 0.03509401, 0.03546687, 0.03540287,\n",
            "       0.03494384, 0.03469213, 0.03891314, 0.03926298, 0.0383116 ])]\n",
            "[0.037550508368767915]\n",
            "\n",
            "[array([0.        , 0.00066127, 0.00230547, 0.00291895, 0.00244796,\n",
            "       0.00387544, 0.00429098, 0.00512204, 0.00426794, 0.00608194,\n",
            "       0.00887376, 0.01021677, 0.00981745, 0.00983451, 0.00955635,\n",
            "       0.01226114, 0.01132001, 0.01192924, 0.01223214, 0.01245654,\n",
            "       0.01418265, 0.0148354 , 0.01768011, 0.01760588, 0.01792671,\n",
            "       0.01909223, 0.02064599, 0.01922876, 0.0211204 , 0.02161102,\n",
            "       0.01997023, 0.0230658 , 0.02237894, 0.02289088, 0.02199839,\n",
            "       0.02329105, 0.02408287, 0.02430045, 0.02657861, 0.02569466,\n",
            "       0.02743869, 0.02727146, 0.02499669, 0.02278081, 0.02439346,\n",
            "       0.02689602, 0.02772112, 0.02772112, 0.03203682, 0.03297369,\n",
            "       0.03351807, 0.03334656, 0.03509401, 0.03546687, 0.03540287,\n",
            "       0.03494384, 0.03469213, 0.03891314, 0.03926298, 0.0383116 ]), array([0.00066127, 0.00230547, 0.00291895, 0.00244796, 0.00387544,\n",
            "       0.00429098, 0.00512204, 0.00426794, 0.00608194, 0.00887376,\n",
            "       0.01021677, 0.00981745, 0.00983451, 0.00955635, 0.01226114,\n",
            "       0.01132001, 0.01192924, 0.01223214, 0.01245654, 0.01418265,\n",
            "       0.0148354 , 0.01768011, 0.01760588, 0.01792671, 0.01909223,\n",
            "       0.02064599, 0.01922876, 0.0211204 , 0.02161102, 0.01997023,\n",
            "       0.0230658 , 0.02237894, 0.02289088, 0.02199839, 0.02329105,\n",
            "       0.02408287, 0.02430045, 0.02657861, 0.02569466, 0.02743869,\n",
            "       0.02727146, 0.02499669, 0.02278081, 0.02439346, 0.02689602,\n",
            "       0.02772112, 0.02772112, 0.03203682, 0.03297369, 0.03351807,\n",
            "       0.03334656, 0.03509401, 0.03546687, 0.03540287, 0.03494384,\n",
            "       0.03469213, 0.03891314, 0.03926298, 0.0383116 , 0.03755051])]\n",
            "[0.037550508368767915, 0.0369720051171426]\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f3qoimCsf42L"
      },
      "source": [
        "#convert X_Train and y_train to numpy arrays\n",
        "x_train, y_train = np.array(x_train), np.array(y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9Q99B6w-hW0M",
        "outputId": "ba02f600-d9af-4482-94d8-c5a6e4226b36"
      },
      "source": [
        "#reshape the data\n",
        "x_train = np.reshape(x_train,(x_train.shape[0],x_train.shape[1],1))\n",
        "x_train.shape\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1816, 60, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mPVNvgiuisrj"
      },
      "source": [
        "#Build LSTM Model\n",
        "model = Sequential ()\n",
        "model.add(LSTM(50, return_sequences = True, input_shape=(x_train.shape[1],1 )))\n",
        "model.add(LSTM(50,return_sequences= False))\n",
        "model.add(Dense(25))\n",
        "model.add(Dense(1))\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E_WJ7wOMkA6j"
      },
      "source": [
        "#compile the model\n",
        "model.compile(optimizer='adam',loss='mean_squared_error')\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HSkYUTItkSO3",
        "outputId": "ff8c6ce3-cdc2-4e51-fc52-fdba8ea99453"
      },
      "source": [
        "#Train the nodel\n",
        "model.fit(x_train, y_train, batch_size=1, epochs=1)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1816/1816 [==============================] - 52s 27ms/step - loss: 8.8359e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7f371e72ff50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BswKLWWxm1JF"
      },
      "source": [
        "#create the testing data set\n",
        "#create new array containing scaled values from index 1816 to 2003\n",
        "test_data = scaled_data[training_data_len - 60: ,:]\n",
        "#create data sets x_tesrt and y_test\n",
        "x_test = []\n",
        "y_test = dataset[training_data_len:, :]\n",
        "for i in range(60, len(test_data)):\n",
        "  x_test.append(test_data[i-60:i,0])\n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DXYzlXHqm4mh"
      },
      "source": [
        "#cvonvert the dat6a to a numpy array\n",
        "x_test = np.array(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8dAM_G8SogOf"
      },
      "source": [
        "#reshape the data\n",
        "x_test = np.reshape(x_test, (x_test.shape[0],x_test.shape[1],1))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Dg8sFE_6pIo7"
      },
      "source": [
        "#get the models predicted price values\n",
        "predictions = model.predict(x_test)\n",
        "predictions = scaler.inverse_transform(predictions)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p_lpH6aRpm4H",
        "outputId": "43cbc3ba-d83a-45b4-8df4-cb350990d587"
      },
      "source": [
        "#Get the root mean squared error (RSME )\n",
        "rmse = np.sqrt(np.mean(predictions - y_test)**2)\n",
        "rmse"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "50.57877673574094"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 660
        },
        "id": "yiH_lrN6qH91",
        "outputId": "2f1a76bf-fc35-4bc7-b700-cadfdc6b122f"
      },
      "source": [
        "#plot the data\n",
        "train = data[:training_data_len]\n",
        "valid = data [training_data_len:]\n",
        "valid['Predictions']= predictions\n",
        "#Visualize Data\n",
        "plt.figure(figsize = (16,8))\n",
        "plt.title('Model')\n",
        "plt.xlabel('Date', fontsize = 18)\n",
        "plt.ylabel ('Close Price (USD)', fontsize = 18)\n",
        "plt.plot(train['Close'])\n",
        "plt.plot(valid[['Close', 'Predictions']])\n",
        "plt.legend(['Train', 'Val', 'Predictions'],loc = 'lower right')\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  after removing the cwd from sys.path.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "sywrzt0AszQb",
        "outputId": "094c832c-83c6-492c-c322-e9e30da70f60"
      },
      "source": [
        "#show actual  and predicted pricing\n",
        "valid"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Close</th>\n",
              "      <th>Predictions</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2019-06-19</th>\n",
              "      <td>7667.740234</td>\n",
              "      <td>7588.460938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-20</th>\n",
              "      <td>7738.049805</td>\n",
              "      <td>7623.171875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-21</th>\n",
              "      <td>7728.779785</td>\n",
              "      <td>7662.659180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-24</th>\n",
              "      <td>7723.020020</td>\n",
              "      <td>7700.167969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-25</th>\n",
              "      <td>7591.540039</td>\n",
              "      <td>7732.851074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-22</th>\n",
              "      <td>13762.360352</td>\n",
              "      <td>13529.849609</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-23</th>\n",
              "      <td>13941.440430</td>\n",
              "      <td>13522.018555</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-26</th>\n",
              "      <td>14026.160156</td>\n",
              "      <td>13524.305664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-27</th>\n",
              "      <td>13960.280273</td>\n",
              "      <td>13537.530273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-28</th>\n",
              "      <td>13901.620117</td>\n",
              "      <td>13548.398438</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>469 rows Ã— 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                   Close   Predictions\n",
              "Date                                  \n",
              "2019-06-19   7667.740234   7588.460938\n",
              "2019-06-20   7738.049805   7623.171875\n",
              "2019-06-21   7728.779785   7662.659180\n",
              "2019-06-24   7723.020020   7700.167969\n",
              "2019-06-25   7591.540039   7732.851074\n",
              "...                  ...           ...\n",
              "2021-04-22  13762.360352  13529.849609\n",
              "2021-04-23  13941.440430  13522.018555\n",
              "2021-04-26  14026.160156  13524.305664\n",
              "2021-04-27  13960.280273  13537.530273\n",
              "2021-04-28  13901.620117  13548.398438\n",
              "\n",
              "[469 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B0Ih97rFtDTk",
        "outputId": "9673356d-8e83-4d2f-b653-0ba5690d226b"
      },
      "source": [
        "#PREDICT CLOSING PRICING & GET QUOTE\n",
        "NDX_quote = web.DataReader ('NDX', data_source = 'yahoo', start = '2012-01-01', end = '2021-05-03')\n",
        "#create new dataframe\n",
        "new_df = NDX_quote.filter(['Close'])\n",
        "#get last 60 day closes and convert dataframe into an array\n",
        "last_60_days = new_df[-60:].values\n",
        "last_60_days_scaled = scaler.transform(last_60_days)\n",
        "x_test = [] #create an empty list\n",
        "x_test.append(last_60_days_scaled)\n",
        "#convert data set to np array\n",
        "x_test = np.array(x_test)\n",
        "#reshape data to be 3d\n",
        "x_test=np.reshape(x_test,(x_test.shape[0], x_test.shape[1],1))\n",
        "#gert predicted scaled price\n",
        "pred_price = model.predict(x_test)\n",
        "#undo scaling\n",
        "pred_price = scaler.inverse_transform(pred_price)\n",
        "print(pred_price)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[13545.411]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "da1erGGqvrfm",
        "outputId": "9ab2ca67-0982-4ae9-ac1c-dd52d24d83e0"
      },
      "source": [
        "#get the quote\n",
        "NDX_quote2 = web.DataReader ('NDX', data_source='yahoo', start='2021-05-03', end ='2021-05-03')\n",
        "print (NDX_quote2 ['Close'])\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Date\n",
            "2021-05-03    13799.719727\n",
            "Name: Close, dtype: float64\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}